# -*- coding: utf-8 -*-
"""DEL_lab2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WSr2kxPVU_0mCkcjGSjbaHDlHl7O-Epc

# Lab 2
14/10/24

Develop and implement a program to execute the preceptron learning algorithm customised to train a single layer perceptron for binary classification tasks, create a robust algorithm that refines the model's weight iteratively, resulting in a proficient single layer perceptron capable of effectively handling binary classification challenges.
"""

import pandas as pd
from numpy import *
from sklearn.metrics import confusion_matrix

def sigmoid(x):
  return 1/(1+exp(-x))

data = pd.read_csv('heart.csv')
d = data.sample(n=20)

i = d.iloc[:,:-1] # input features
o = d.iloc[:,-1] # target

w = matrix([0.1]* len(i.iloc[0])) # weights

h = matrix(i) * w.T # hypothesis
bias = -50
h = h + bias

y_pred = []
for j in h:
  if (sigmoid(j)>= 0.5):
    y_pred.append(1)
  else:
    y_pred.append(0)
print("Predicticted target:", y_pred)
print("Actual target:", list(o))

confusion_matrix(array(o), array(y_pred)) # tn, fp, fn, tp